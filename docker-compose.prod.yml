version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.prod

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/var/lib/redis/data
    command: redis-server --appendonly yes


  django:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    command: gunicorn project.wsgi:application --bind 0.0.0.0:8000 --workers 3
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis

  celery:
    build:
      context: .
      dockerfile: docker/celery/Dockerfile
    command: celery -A project worker --loglevel=info
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis

  celerybeat:
    build:
      context: .
      dockerfile: docker/celery/Dockerfile
    command: celery -A project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
